name: GitHub Actions Demo
on: [push]
jobs:
  setup_bitcoin_node:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
    steps:
      - name: Cache Bitcoin node
        id: bitcoin-node-cache
        uses: actions/cache@v2
        with:
          path: bitcoin-0.21.1
          key: bitcoin-0.21.1

      - name: Download Bitcoin node
        if: steps.bitcoin-node-cache.outputs.cache-hit != 'true'
        run: wget https://bitcoin.org/bin/bitcoin-core-0.21.1/bitcoin-0.21.1-x86_64-linux-gnu.tar.gz && tar -xvf bitcoin-0.21.1-x86_64-linux-gnu.tar.gz

      - name: Start Bitcoin node
        run: cp bitcoin-0.21.1/bin/* /usr/local/bin/ && bitcoind -reindex -txindex -regtest -daemon -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 -deprecatedrpc=signrawtransaction

  run_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: restore lerna node_modules from cache
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          path: |
            node_modules
            */*/node_modules
      - name: yarn install
        if: steps.${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - run: yarn bootstrap
      - name: Install dependencies for cmake
        run: DEBIAN_FRONTEND=noninteractive sudo apt-get -y install build-essential cmake automake python3 nodejs
      - name: Build cfd-js
        if: steps.${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}.outputs.cache-hit != 'true'
        run: npm run cmake_all
        shell: bash
        working-directory: ./node_modules/cfd-js
      - name: Build cfd-dlc-js
        if: steps.${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}.outputs.cache-hit != 'true'
        run: npm run cmake_all
        shell: bash
        working-directory: ./node_modules/cfd-dlc-js
      - run: yarn build
      - run: yarn test
