name: CI/CD

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Cache Bitcoin node
        id: bitcoin-cache
        uses: actions/cache@v4
        with:
          path: ~/bitcoin
          key: ${{ runner.os }}-bitcoin-22.0-optimized-v2

      - name: Download and setup Bitcoin node
        if: steps.bitcoin-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/bitcoin
          wget -q -O ~/bitcoin/bitcoin-22.0-x86_64-linux-gnu.tar.gz https://bitcoincore.org/bin/bitcoin-core-22.0/bitcoin-22.0-x86_64-linux-gnu.tar.gz
          cd ~/bitcoin
          tar -xzf bitcoin-22.0-x86_64-linux-gnu.tar.gz
          # Copy binaries to PATH immediately after extraction
          sudo cp bitcoin-22.0/bin/* /usr/local/bin/
          # Pre-generate regtest blocks for faster startup
          bitcoind -regtest -txindex -daemon -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 &
          sleep 5
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 createwallet "testwallet" false false "" false false || true
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 loadwallet "testwallet" || true
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 generatetoaddress 101 $(bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 getnewaddress '' 'bech32')
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 stop
          sleep 3

      - name: Install Bitcoin binaries
        run: |
          cd ~/bitcoin
          # Extract if not already extracted (cache hit case)
          if [ ! -d "bitcoin-22.0" ]; then
            tar -xzf bitcoin-22.0-x86_64-linux-gnu.tar.gz
          fi
          # Copy binaries to PATH (needed for cache hit case)
          sudo cp bitcoin-22.0/bin/* /usr/local/bin/

      - name: Start Bitcoin node
        run: |
          bitcoind -regtest -txindex -daemon -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 -deprecatedrpc=signrawtransaction -fallbackfee=0.00001 -addresstype=p2sh-segwit -zmqpubrawblock=tcp://127.0.0.1:28332 -zmqpubrawtx=tcp://127.0.0.1:28333
          sleep 5
          # Create and load wallet for tests
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 createwallet "testwallet" false false "" false false || true
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 loadwallet "testwallet" || true
          sleep 2
          # Generate initial blocks for tests
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 generatetoaddress 101 $(bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 getnewaddress '' 'bech32') || true
          # Verify setup
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 getwalletinfo
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 getblockchaininfo

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Ensure Bitcoin wallet is ready
        run: |
          # Wait for Bitcoin to be fully ready
          sleep 2
          # Ensure wallet is loaded (tests expect this)
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 loadwallet "testwallet" || true
          # Verify wallet is ready for tests
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 getwalletinfo
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 getbalance

      - name: Run tests
        env:
          NODE_ENV: test
          CI: true
          BITCOIN_NETWORK: regtest
          BITCOIN_RPC_HOST: 127.0.0.1
          BITCOIN_RPC_PORT: 18443
          BITCOIN_RPC_USER: bitcoin
          BITCOIN_RPC_PASSWORD: local321
          DISABLE_WATCHTOWER_HEARTBEAT: true
          FAST_TEST_MODE: true
        run: |
          # Run tests with CI optimizations
          if command -v yarn test:ci &> /dev/null; then
            yarn test:ci
          else
            yarn test --maxWorkers=2 --forceExit --detectOpenHandles
          fi
        timeout-minutes: 8

      - name: Cleanup Bitcoin node
        if: always()
        run: |
          bitcoin-cli -regtest -rpcport=18443 -rpcuser=bitcoin -rpcpassword=local321 stop || true
          sleep 2
          pkill -f bitcoind || true

  changeset:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build packages
        run: yarn build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: yarn publish
          title: 'chore: release packages'
          commit: 'chore: release packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
